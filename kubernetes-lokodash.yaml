kind: Deployment
apiVersion: apps/v1
metadata:
  name: lokodash
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: lokodash
  template:
    metadata:
      labels:
        k8s-app: lokodash
    spec:
      containers:
      - name: lokodash
        image: joaquimrocha/lokodash:latest
        args:
          - "-in-cluster"
        ports:
        - containerPort: 4654
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 4654
          initialDelaySeconds: 30
          timeoutSeconds: 30
      imagePullSecrets:
        - name: lokodash-dockerhub
      nodeSelector:
        'beta.kubernetes.io/os': linux

---
kind: Service
apiVersion: v1
metadata:
  name: lokodash
  namespace: kube-system
spec:
  ports:
    - port: 80
      targetPort: 4654
  selector:
    k8s-app: lokodash

---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: lokodash
  namespace: kube-system
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    kubernetes.io/ingress.class: contour
    contour.heptio.com/websocket-routes: "/"
spec:
  tls:
  - secretName: lokodash
    hosts:
    - lokodash.kinvolk-dev-test.dev.lokomotive-k8s.net
  rules:
  -
    host: lokodash.kinvolk-dev-test.dev.lokomotive-k8s.net
    http:
      paths:
      -
        path: /
        backend:
          serviceName: lokodash
          servicePort: 80
