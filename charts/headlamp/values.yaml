# Default values for headlamp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of desired pods
replicaCount: 1

image:
  # -- Container image registry
  registry: ghcr.io
  # -- Container image name
  repository: headlamp-k8s/headlamp
  # -- Image pull policy. One of Always, Never, IfNotPresent
  pullPolicy: IfNotPresent
  # -- Container image tag, If "" uses appVersion in Chart.yaml
  tag: ""

# -- An optional list of references to secrets in the same namespace to use for pulling any of the images used
imagePullSecrets: []
# -- Overrides the name of the chart
nameOverride: ""
# -- Overrides the full name of the chart
fullnameOverride: ""

# -- An optional list of init containers to be run before the main containers.
initContainers: []

config:
  # -- base url path at which headlamp should run
  baseURL: ""
  oidc:
    secret:
      # -- Generate OIDC secret. If true, will generate a secret using .config.oidc.
      create: true
      # -- Name of the OIDC secret.
      name: oidc
    # -- OIDC client ID
    clientID: ""
    # -- OIDC client secret
    clientSecret: ""
    # -- OIDC issuer URL
    issuerURL: ""
    # -- OIDC scopes to be used
    scopes: ""
  # -- directory to look for plugins
  pluginsDir: "/headlamp/plugins"

# -- An optional list of environment variables
# env:
  # - name: KUBERNETES_SERVICE_HOST
  #   value: localhost
  # - name: KUBERNETES_SERVICE_PORT
  #   value: 6443

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.(If not set and create is true, a name is generated using the fullname template)
  name: ""

clusterRoleBinding:
  # -- Specified whether a cluster role binding should be created
  create: true
  # -- Annotations to add to the cluster role binding
  annotations: {}

# -- Annotations to add to the pod
podAnnotations: {}

# -- Headlamp pod's Security Context
podSecurityContext:
  {}
  # fsGroup: 2000

# -- Headlamp containers Security Context
securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  privileged: false
  runAsUser: 100
  runAsGroup: 101

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- Kubernetes Service port
  port: 80

# -- Headlamp containers volume mounts
volumeMounts: []

# -- Headlamp pod's volumes
volumes: []

persistentVolumeClaim:
  # -- Enable Persistent Volume Claim
  enabled: false
  # -- Annotations to add to the persistent volume claim (if enabled)
  annotations:
    {}
  # -- accessModes for the persistent volume claim, eg: ReadWriteOnce, ReadOnlyMany, ReadWriteMany etc.
  accessModes: []
  # -- size of the persistent volume claim, eg: 10Gi. Required if enabled is true.
  size: ""
  # -- storageClassName for the persistent volume claim.
  storageClassName: ""
  # -- selector for the persistent volume claim.
  selector: {}
  # -- volumeMode for the persistent volume claim, eg: Filesystem, Block.
  volumeMode: ""

ingress:
  # -- Enable ingress controller resource
  enabled: false
  # -- Annotations for Ingress resource
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Hostname(s) for the Ingress resource
  hosts:
    []
    # - host: chart-example.local
    #   paths: []
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- CPU/Memory resource requests/limits
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}
