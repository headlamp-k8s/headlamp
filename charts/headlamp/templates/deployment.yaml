{{- $oidc := .Values.config.oidc }}
{{- $env := .Values.env }}

{{- $clientID := "" }}
{{- $clientSecret := "" }}
{{- $issuerURL := "" }}
{{- $scopes := "" }}
{{- $impersonate := false }}
{{- $userClaim := "" }}
{{- $groupsClaim := "" }}

# This block of code is used to extract the values from the env.
# This is done to check if the values are non-empty and if they are, they are used in the deployment.yaml.
{{- range $env }}
  {{- if eq .name "OIDC_CLIENT_ID" }}
    {{- $clientID = .value }}
  {{- end }}
  {{- if eq .name "OIDC_CLIENT_SECRET" }}
    {{- $clientSecret = .value }}
  {{- end }}
  {{- if eq .name "OIDC_ISSUER_URL" }}
    {{- $issuerURL = .value }}
  {{- end }}
  {{- if eq .name "OIDC_SCOPES" }}
    {{- $scopes = .value }}
  {{- end }}
  {{- if eq .name "OIDC_IMPERSONATE" }}
    {{- $impersonate = (eq .value "true") }}
  {{- end }}
  {{- if eq .name "OIDC_USER_CLAIM" }}
    {{- $userClaim = .value }}
  {{- end }}
  {{- if eq .name "OIDC_GROUPS_CLAIM" }}
    {{- $groupsClaim = .value }}
  {{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headlamp.fullname" . }}
  labels:
    {{- include "headlamp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "headlamp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "headlamp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "headlamp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry}}/{{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "v%s" .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if or $oidc .Values.env }}
          {{- if $oidc.externalSecret.enabled }}
          # Check if externalSecret is enabled
          envFrom:
          - secretRef:
              name: {{ $oidc.externalSecret.name }}
          {{- if or .Values.env $oidc.impersonate }}
          env:
            {{- if $oidc.impersonate }}
            - name: OIDC_IMPERSONATE
              value: {{ $oidc.impersonate | quote }}
            {{- end }}
            {{- if $oidc.userClaim }}
            - name: OIDC_USER_CLAIM
              value: {{ $oidc.userClaim }}
            {{- end }}
            {{- if $oidc.groupsClaim }}
            - name: OIDC_GROUPS_CLAIM
              value: {{ $oidc.groupsClaim }}
            {{- end }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- else }}
          env:
            {{- if $oidc.secret.create }}
            {{- if $oidc.clientID }}
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $oidc.secret.name }}
                  key: clientID
            {{- end }}
            {{- if $oidc.clientSecret }}
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $oidc.secret.name }}
                  key: clientSecret
            {{- end }}
            {{- if $oidc.issuerURL }}
            - name: OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $oidc.secret.name }}
                  key: issuerURL
            {{- end }}
            {{- if $oidc.scopes }}
            - name: OIDC_SCOPES
              valueFrom:
                secretKeyRef:
                  name: {{ $oidc.secret.name }}
                  key: scopes
            {{- end }}
            {{- else }}
            {{- if $oidc.clientID }}
            - name: OIDC_CLIENT_ID
              value: {{ $oidc.clientID }}
            {{- end }}
            {{- if $oidc.clientSecret }}
            - name: OIDC_CLIENT_SECRET
              value: {{ $oidc.clientSecret }}
            {{- end }}
            {{- if $oidc.issuerURL }}
            - name: OIDC_ISSUER_URL
              value: {{ $oidc.issuerURL }}
            {{- end }}
            {{- if $oidc.scopes }}
            - name: OIDC_SCOPES
              value: {{ $oidc.scopes }}
            {{- end }}
            {{- end }}
            {{- if $oidc.impersonate }}
            - name: OIDC_IMPERSONATE
              value: {{ $oidc.impersonate | quote }}
            {{- end }}
            {{- if $oidc.userClaim }}
            - name: OIDC_USER_CLAIM
              value: {{ $oidc.userClaim }}
            {{- end }}
            {{- if $oidc.groupsClaim }}
            - name: OIDC_GROUPS_CLAIM
              value: {{ $oidc.groupsClaim }}
            {{- end }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- end }}
          args:
            {{- if .Values.config.inCluster }}
            - "-in-cluster"
            {{- end }}
            {{- with .Values.config.pluginsDir}}
            - "-plugins-dir={{ . }}"
            {{- end }}
            {{- if not $oidc.externalSecret.enabled}}
            # Check if externalSecret is disabled
            {{- if or (ne $oidc.clientID "") (ne $clientID "") }}
            # Check if clientID is non empty either from env or oidc.config
            - "-oidc-client-id=$(OIDC_CLIENT_ID)"
            {{- end }}
            {{- if or (ne $oidc.clientSecret "") (ne $clientSecret "") }}
            # Check if clientSecret is non empty either from env or oidc.config
            - "-oidc-client-secret=$(OIDC_CLIENT_SECRET)"
            {{- end }}
            {{- if or (ne $oidc.issuerURL "") (ne $issuerURL "") }}
            # Check if issuerURL is non empty either from env or oidc.config
            - "-oidc-idp-issuer-url=$(OIDC_ISSUER_URL)"
            {{- end }}
            {{- if or (ne $oidc.scopes "") (ne $scopes "") }}
            # Check if scopes are non empty either from env or oidc.config
            - "-oidc-scopes=$(OIDC_SCOPES)"
            {{- end }}
            {{- else }}
            - "-oidc-client-id=$(OIDC_CLIENT_ID)"
            - "-oidc-client-secret=$(OIDC_CLIENT_SECRET)"
            - "-oidc-idp-issuer-url=$(OIDC_ISSUER_URL)"
            - "-oidc-scopes=$(OIDC_SCOPES)"
            {{- end }}
            {{- if or ($oidc.impersonate) ($impersonate) }}
            # Check if impersonate is enabled either from env or oidc.config
            - "-oidc-impersonate=$(OIDC_IMPERSONATE)"
            {{- end }}
            {{- if and (or ($oidc.impersonate) ($impersonate)) (or (ne $oidc.userClaim "") (ne $userClaim "")) }}
            # Check if user claim is non empty either from env or oidc.config
            - "-oidc-user-claim=$(OIDC_USER_CLAIM)"
            {{- end }}
            {{- if and (or ($oidc.impersonate) ($impersonate)) (or (ne $oidc.groupsClaim "") (ne $groupsClaim "")) }}
            # Check if groups claim is non empty either from env or oidc.config
            - "-oidc-groups-claim=$(OIDC_GROUPS_CLAIM)"
            {{- end }}
            {{- with .Values.config.baseURL }}
            - "-base-url={{ . }}"
            {{- end }}
            {{- with .Values.config.extraArgs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 4466
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ .Values.config.baseURL }}/"
              port: http
          readinessProbe:
            httpGet:
              path: "{{ .Values.config.baseURL }}/"
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes}}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
