name: Publish container
on:
  push:
    tags:
    - 'v*'
  workflow_dispatch:
    inputs:
      buildTag:
        description: 'Headlamp tag (with the "v" prefix)'
        required: true
        type: string
      containerTags:
        description: 'Container tags (separated by a comma)'
        type: string

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: headlamp-k8s/headlamp
jobs:
  push_to_registry:
    name: Test building container image
    runs-on: ubuntu-latest
    permissions:
      packages: write # needed for publishing the container image
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: Check out the repo
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0
    - name: Figure out the tag based on event trigger
      env:
        TRIGGER: ${{ github.event_name }}
      run: |
        CONTAINER_TAGS=${{ github.event.inputs.containerTags }}
        if [ "$TRIGGER" == "workflow_dispatch" ]; then
          echo "TRIGGERED_BY_WORKFLOW_DISPATCH with build tag ${{ github.event.inputs.buildTag }}"
          BUILD_TAG=${{ github.event.inputs.buildTag }}
          if [ -z $CONTAINER_TAGS ]; then
            CONTAINER_TAGS=$BUILD_TAG
          fi
        else
          # on push to a tag, use the latest tag starting with v and latest as the build tag
          BUILD_TAG="$(git tag --list --sort=version:refname 'v*' | tail -1)"
          if [ -z $CONTAINER_TAGS ]; then
            CONTAINER_TAGS="$BUILD_TAG,latest"
          fi
        fi

        # Join all tags with the image name
        TAGS=""
        for TAG in $(echo $CONTAINER_TAGS|tr ',' ' ') ; do \
          TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG},${TAGS}
        done

        # Remove trailing comma
        TAGS=$(echo $TAGS | sed s/,$//g)

        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        echo "CONTAINER_TAGS=$TAGS" >> $GITHUB_ENV
    - name: Print finalised tags
      run: |
        echo "BUILD_TAG=${{ env.BUILD_TAG }}"
        echo "CONTAINER_TAGS=${{ env.CONTAINER_TAGS }}"
    - name: checkout to build branch
      run: |
        git fetch origin
        git checkout ${{ env.BUILD_TAG }}
    - name: Log in to the Container registry
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Build and push Docker image
      uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
      with:
        context: .
        push: true
        pull: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ env.CONTAINER_TAGS }}
        labels: ${{ steps.meta.outputs.labels }}
        provenance: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
